name: CI

# Trigger on pushes, PRs (excluding documentation changes), and nightly.
on:
  push:
  pull_request:
  schedule:
    - cron: 0 0 * * * # daily at 00:00

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      working-directory: ${{runner.workspace}}
      run: |
        cmake -E make_directory build
        cmake -E make_directory build/debug
        cmake -E make_directory build/release

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build/debug
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=debug

    - name: Build Debug
      working-directory: ${{runner.workspace}}/build/debug
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: 
        cmake --build . --config debug

    - name: Test Debug
      working-directory: ${{runner.workspace}}/build/debug/
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -L GameDock

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build/release
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=release

    - name: Build Release
      working-directory: ${{runner.workspace}}/build/release
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config release

    - name: Test Release
      working-directory: ${{runner.workspace}}/build/release/
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -L GameDock