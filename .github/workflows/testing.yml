name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: 0 0 * * * # daily at 00:00

jobs:
  build-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        build_type: [debug, release]
    env:
      MY_INSTALL_DIR: ~/.local

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    - name: Set up dependencies
      run: |
        sudo apt install -y protobuf-compiler libprotobuf-dev
        mkdir -p $MY_INSTALL_DIR
        git clone --recurse-submodules -b v1.34.1 https://github.com/grpc/grpc
        cd grpc
        mkdir -p cmake/build
        pushd cmake/build
        cmake -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=ON -DCMAKE_INSTALL_PREFIX=$MY_INSTALL_DIR -DBENCHMARK_ENABLE_TESTING=OFF ../..
        make -j 8
        make install

    - name: Create Build Environment
      working-directory: ${{runner.workspace}}
      run: |
        cmake -E make_directory build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build/
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_PREFIX_PATH=$MY_INSTALL_DIR

    - name: Cache externals
      uses: actions/cache@v2
      with:
        path: |
          ${{runner.workspace}}/build/externals
          $MY_INSTALL_DIR
        key: ${{ runner.os }}-build-${{ matrix.build_type }}-${{ hashFiles('externals/**/CMakeLists.txt') }}

    - name: Build
      working-directory: ${{runner.workspace}}/build/
      shell: bash
      run: 
        cmake --build . --config ${{ matrix.build_type }} -j 4

    - name: Test
      working-directory: ${{runner.workspace}}/build/
      shell: bash
      run: ctest -L GameDock

  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        build_type: [debug, release]
    env:
      MY_INSTALL_DIR: ~/.local

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    - name: Set up dependencies
      run: |
        brew install protobuf
        mkdir -p $MY_INSTALL_DIR
        git clone --recurse-submodules -b v1.34.1 https://github.com/grpc/grpc
        cd grpc
        mkdir -p cmake/build
        pushd cmake/build
        cmake -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=ON -DCMAKE_INSTALL_PREFIX=$MY_INSTALL_DIR -DBENCHMARK_ENABLE_TESTING=OFF ../..
        make -j 8
        make install

    - name: Create Build Environment
      working-directory: ${{runner.workspace}}
      run: |
        cmake -E make_directory build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build/
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_PREFIX_PATH=$MY_INSTALL_DIR

    - name: Cache externals
      uses: actions/cache@v2
      with:
        path: |
          ${{runner.workspace}}/build/externals
          $MY_INSTALL_DIR
        key: ${{ runner.os }}-build-${{ matrix.build_type }}-${{ hashFiles('externals/**/CMakeLists.txt') }}

    - name: Build
      working-directory: ${{runner.workspace}}/build/
      shell: bash
      run: 
        cmake --build . --config ${{ matrix.build_type }} -j 4

    - name: Test
      working-directory: ${{runner.workspace}}/build/
      shell: bash
      run: ctest -L GameDock

  # build-win:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-latest]
  #       build_type: [debug, release]

  #   steps:
  #   - uses: actions/checkout@v1
  #     with:
  #       submodules: 'recursive'

  #   - name: Create Build Environment
  #     working-directory: ${{runner.workspace}}
  #     run: |
  #       cmake -E make_directory build

  #   - name: Configure CMake
  #     shell: bash
  #     working-directory: ${{runner.workspace}}/build/
  #     run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

  #   - name: Cache externals
  #     uses: actions/cache@v2
  #     with:
  #       path: ${{runner.workspace}}/build/externals
  #       key: ${{ runner.os }}-build-${{ matrix.build_type }}-${{ hashFiles('externals/**/CMakeLists.txt') }}

  #   - name: Build
  #     working-directory: ${{runner.workspace}}/build/
  #     shell: bash
  #     run: 
  #       cmake --build . --config ${{ matrix.build_type }} -j 4

  #   - name: Test
  #     working-directory: ${{runner.workspace}}/build/
  #     shell: bash
  #     run: ctest -L GameDock
